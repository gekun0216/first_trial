git clone

# start to track the untracked file.
# stage the changes, multiple-times.
git add

git status

# -s short output
git status -s
git status --short

# ? modified means modify something already in snapshot.
# ? new means newly added to staging area. 

# without no arg, diff the changes what you've made in the working dir but not
# staged yet.
git diff

# diff between staged and last commit.
git diff --staged

# diff what we've staged so far.
git diff --cached

# empty commit message means abortion
git commit

# make automated commit message more specific by adding info provided by 
# git diff
git commit -v

# inline commit message
git commit -m

# staging modification before commit
git commit -a

# rm from staging and also working dir, and then commit will rm from snapshot.
git rm

# Only rm from staging, to make the file untracked
git rm --cached

# equavalent to: mv file1 file2; git rm file1; git add file2;
git mv

git log

# -p (patches?), -2, show the latest two commits. 
git log -p -2

# abbreviated stats for each commit
git log --stat

# options can be oneline | short | full | fuller | format
git log --pretty=options

# Show branch and merge history
git log --pretty=oneline --graph

# limited options
git log --since | --until | --author | --grep | -S
